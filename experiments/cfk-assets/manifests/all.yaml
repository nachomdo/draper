apiVersion: v1
kind: Namespace
metadata:
  name: confluent
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: ccloud-cluster
  namespace: confluent
spec:
  kafkaRest:
    endpoint:  https://pkc-41wq6.eu-west-2.aws.confluent.cloud
    kafkaClusterID: lkc-kd5dg
    authentication:
      type: basic
      basic:
        secretRef: "ccloud-creds"
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: gke-cluster
  namespace: confluent
spec:
  kafkaRest:
    endpoint: http://kafka.confluent.svc.cluster.local:8090
    authentication:
      type: basic
      basic:
        secretRef: "gke-creds"
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: onprem-cluster
  namespace: confluent
spec:
  kafkaRest:
    endpoint: http://broker-005:8090
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaTopic
metadata:
  name: onprem-demo-topic
  namespace: confluent
spec:
  replicas: 3
  partitionCount: 4
  kafkaRestClassRef:
    name: onprem-cluster
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaTopic
metadata:
  name: ccloud-demo-topic
  namespace: confluent
spec:
  replicas: 3
  partitionCount: 4
  kafkaRestClassRef:
    name: ccloud-cluster
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaTopic
metadata:
  name: cfk-demo-topic
  namespace: confluent
spec:
  replicas: 3
  partitionCount: 4
  kafkaRestClassRef:
    name: gke-cluster
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: customer-schema-config
  namespace: confluent
data:
  schema: |
    syntax = "proto3";
    package com.example;

    import "com/example/address.proto";

    message Customer {
      string firstName = 1;
      string lastName = 2;
      com.example.Address address = 3;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: address-schema-config
  namespace: confluent
data:
  schema: |
    syntax = "proto3";
    package com.example;
    message Address {
      string street = 1;
      optional string street2 = 2;
      string city = 3;
      optional string state = 4;
      string postalCode = 5;
      string countryCode = 6;
    }
---
apiVersion: platform.confluent.io/v1beta1
kind: Schema
metadata:
  name: customer-schema
  namespace: confluent
spec:
  data:
    configRef: customer-schema-config
    format: protobuf
  name: customer-schema
  schemaReferences:
    - subject: address-schema
      format: protobuf
      version: 2
      protobuf:
        file: "com/example/address.proto"
  schemaRegistryRest:
    endpoint: http://schemaregistry.confluent.svc.cluster.local:8081
    authentication:
      type: basic
      basic:
        secretRef: gke-creds
---
apiVersion: platform.confluent.io/v1beta1
kind: Schema
metadata:
  name: address-schema
  namespace: confluent
spec:
  data:
    configRef: address-schema-config
    format: protobuf
  name: address-schema
  schemaRegistryRest:
    endpoint: http://schemaregistry.confluent.svc.cluster.local:8081
    authentication:
      type: basic
      basic:
        secretRef: gke-creds
